// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Limited rules execution environment and functions are constrained:
    // https://firebase.google.com/docs/rules/rules-language#function
    // https://github.com/google/cel-spec/blob/master/doc/langdef.md
    function quickPad(datePart) {
      return datePart.size() == 1 ? "0" + datePart : datePart;
    }

    // Assemble YYYY-MM-DD-HH from timestamp
    function buildDatePath(t) {
      return string(t.year()) + '-'
        + quickPad(string(t.month())) + '-'
        + quickPad(string(t.day())) + '-'
        + quickPad(string(t.hours()))
    }

    // Check date path against timestamp, allowing for clock skew
    function checkDatePath(datePath, t) {
      return datePath == buildDatePath(t + duration.value(1, 'h'))
          || datePath == buildDatePath(t)
          || datePath == buildDatePath(t - duration.value(1, 'h'));
    }

    match /uuid/{uuid}/date/{date}/metrics/{metricName} {
      allow create: if request.resource.data.payload.uuid == uuid
                    && request.resource.data.payload.created == request.time
                    && checkDatePath(date, request.resource.data.payload.created);
    }
  }
}
